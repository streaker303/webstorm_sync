<templateSet group="Vue">
  <template name="v-t" value="&lt;template&gt;&#10; &lt;div&gt;&#10;&#10; &lt;/div&gt;&#10;&lt;/template&gt;&#10;&#10;&lt;script&gt;&#10; export default {&#10;  $END$&#10; }&#10;&lt;/script&gt;&#10;&#10;&lt;style scoped&gt;&#10;&#10;&lt;/style&gt;" description="Vue single file component" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="VUE_TOP_LEVEL" value="true" />
    </context>
  </template>
  <template name="elecss" value="import 'element-ui/lib/theme-chalk/index.css';" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="data" value="data() {&#10; return {&#10;  $key$: $value$&#10; }&#10;}," description="Vue component data" toReformat="true" toShortenFQNames="true">
    <variable name="key" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="VUE_COMPONENT_DESCRIPTOR" value="true" />
    </context>
  </template>
  <template name="filter" value="filters: {&#10; $fnName$: function($value$) {&#10;  return $value$$END$;&#10; }&#10;}" description="Vue filter" toReformat="true" toShortenFQNames="true">
    <variable name="fnName" expression="" defaultValue="&quot;fnName&quot;" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="VUE_COMPONENT_DESCRIPTOR" value="true" />
    </context>
  </template>
  <template name="vaction" value="actions: {&#10; $updateValue$({commit}, $payload$) {&#10;  commit($updateValue$, $payload$);&#10; }&#10;}" description="Vuex action" toReformat="true" toShortenFQNames="true">
    <variable name="updateValue" expression="" defaultValue="&quot;updateValue&quot;" alwaysStopAt="true" />
    <variable name="payload" expression="" defaultValue="&quot;payload&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vgetter" value="getters: {&#10; value: $value$ =&gt; {&#10;  return state.$value$;&#10; }&#10;}" description="Vuex getter" toReformat="true" toShortenFQNames="true">
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vmutation" value="mutations: {&#10; $updateValue$(state, $payload$) {&#10;  state.$value$ = $payload$;&#10; }&#10;}" description="Vuex mutation" toReformat="true" toShortenFQNames="true">
    <variable name="updateValue" expression="" defaultValue="&quot;updateValue&quot;" alwaysStopAt="true" />
    <variable name="payload" expression="" defaultValue="&quot;payload&quot;" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="&quot;value&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vcomputed" value="computed: {&#10; $name$() {&#10;  return this.$data$ $END$;&#10; }&#10;}," description="Computed value" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="data" expression="" defaultValue="&quot;data&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vc-direct" value="Vue.directive('$directiveName$', {&#10; bind(el, binding, vnode) {&#10;  el.style.$arg$ = binding.value.$arg$;&#10; }&#10;});" description="Vue custom directive" toReformat="true" toShortenFQNames="true">
    <variable name="directiveName" expression="" defaultValue="&quot;directiveName&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vimport" value="import $New$ from './components/$New$.vue';" description="Import Vue component" toReformat="true" toShortenFQNames="true">
    <variable name="New" expression="" defaultValue="&quot;New&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vmethod" value="methods: {&#10; $name$() {&#10;  $END$&#10; }&#10;}," description="Vue method" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vprops" value="props: {&#10; $propName$: {&#10;  type: $type$,&#10;  default: $default$$END$&#10; },&#10;}," description="Vue props with default" toReformat="true" toShortenFQNames="true">
    <variable name="propName" expression="" defaultValue="&quot;propName&quot;" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="&quot;Number&quot;" alwaysStopAt="true" />
    <variable name="default" expression="" defaultValue="&quot;0&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vwatcher" value="watch: {&#10; $data$($newValue$, $oldValue$) {&#10;  $END$&#10; }&#10;}," description="Vue watcher" toReformat="true" toShortenFQNames="true">
    <variable name="data" expression="" defaultValue="&quot;data&quot;" alwaysStopAt="true" />
    <variable name="newValue" expression="" defaultValue="&quot;newValue&quot;" alwaysStopAt="true" />
    <variable name="oldValue" expression="" defaultValue="&quot;oldValue&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vstyle" value="&lt;$div$ :style=&quot;{ fontSize: $data$ + 'px' }&quot;&gt;&lt;/$div$&gt;" description="Vue inline style binding" toReformat="true" toShortenFQNames="true">
    <variable name="div" expression="" defaultValue="&quot;div&quot;" alwaysStopAt="true" />
    <variable name="data" expression="" defaultValue="&quot;data&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vstyle-obj" value="&lt;$div$ :style=&quot;[$styleObjectA$, $styleObjectB$]&quot;&gt;&lt;/$div$&gt;" description="Vue style binding object" toReformat="true" toShortenFQNames="true">
    <variable name="div" expression="" defaultValue="&quot;div&quot;" alwaysStopAt="true" />
    <variable name="styleObjectA" expression="" defaultValue="&quot;styleObjectA&quot;" alwaysStopAt="true" />
    <variable name="styleObjectB" expression="" defaultValue="&quot;styleObjectB&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vanim" value="&lt;transition&#10; mode=&quot;out-in&quot;&#10; @before-enter=&quot;beforeEnter&quot;&#10; @enter=&quot;enter&quot;&#10;&#10; @before-leave=&quot;beforeLeave&quot;&#10; @leave=&quot;leave&quot;&#10; :css=&quot;false&quot;&gt;&#10;&#10;&lt;/transition&gt;" description="Vue transition component with JavaScript hooks" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vfor" value="&lt;$div$ v-for=&quot;$item$ in $item$s&quot; :key=&quot;$item$.id&quot;&gt;&#10; {{ $item$ }}&#10;&lt;/$div$&gt;" description="Vue v-for statement" toReformat="true" toShortenFQNames="true">
    <variable name="div" expression="" defaultValue="&quot;div&quot;" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="vmodel" value="&lt;input v-model=&quot;$data$&quot; type=&quot;text&quot; /&gt;" description="Vue v-model directive" toReformat="true" toShortenFQNames="true">
    <variable name="data" expression="" defaultValue="&quot;data&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="von" value="@click=&quot;$handler$($arg$, $event$)&quot;" description="Vue v-on click handler with arguments" toReformat="true" toShortenFQNames="true">
    <variable name="handler" expression="" defaultValue="&quot;handler&quot;" alwaysStopAt="true" />
    <variable name="arg" expression="" defaultValue="&quot;arg&quot;" alwaysStopAt="true" />
    <variable name="event" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>